from zipfile import ZIP_DEFLATED
from zipfile import ZipFile
import streamlit as st
from checks import checkPypiRocrate, checkValidator, checkParamMetadataJson, checkSchema


col1, col2 = st.columns([0.7, 0.3])
col1.markdown('## Tools for the .eln file')
col1.markdown('The ELN file format is an archive format for exchange of experimental results and data. '
                'This file format can be created and read by software such as Electronic Laboratory Notebooks. '
                'For more information visit [link](https://github.com/TheELNConsortium/TheELNFileFormat).')
col2.image('logo-color-fade.png')

tabVerify, tabPreview = st.tabs(["Verify", "Preview"])

with tabVerify:
    st.markdown('Verify easily if a file conforms to the .eln format and validate that the file is not corrupt.')
    uploaded_file = st.file_uploader("Choose a file", key='verifyFile')
    if uploaded_file is not None:
        st.markdown("# Test summary:")
        success, output = checkPypiRocrate(uploaded_file)
        with st.expander(("Success:" if success else "FAILURE:")+" Pypi RO-Crate", icon='✅' if success else '❌'):
            st.code('Success' if success else output)
        success, output = checkValidator(uploaded_file)
        with st.expander(("Success:" if success else "FAILURE:")+" Validator", icon='✅' if success else '❌'):
            st.code('Success' if success else output)
        success, output = checkParamMetadataJson(uploaded_file)
        with st.expander(("Success:" if success else "FAILURE:")+" Parameters Metadata Json", icon='✅' if success else '❌'):
            st.code('Success' if success else output)
        success, output = checkSchema(uploaded_file)
        with st.expander(("Success:" if success else "FAILURE:")+" Schema", icon='✅' if success else '❌'):
            st.code('Success' if success else output)


with tabPreview:
    st.markdown('Preview the content of a .eln file. This preview is generated by the software that created the .eln file.')
    uploaded_file = st.file_uploader("Choose a file", key='previewFile')
    if uploaded_file is not None:
        with ZipFile(uploaded_file, 'r', compression=ZIP_DEFLATED) as elnFile:
            htmlFile = [i for i in elnFile.namelist() if i.endswith('ro-crate-preview.html')][0]
            htmlStr  = elnFile.read(htmlFile).decode('utf-8')
            framed_html = f"""
            <div style="border:2px solid #888; border-radius:8px; padding:16px; margin:10px 0;">
                {htmlStr}
            </div>
            """
            container = st.container()
            container.html(framed_html)
